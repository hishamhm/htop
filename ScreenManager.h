/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_ScreenManager
#define HEADER_ScreenManager
/*
htop - ScreenManager.h
(C) 2004-2011 Hisham H. Muhammad
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/

#include "FunctionBar.h"
#include "Vector.h"
#include "Header.h"

typedef enum Orientation_ {
   VERTICAL,
   HORIZONTAL
} Orientation;

typedef struct ScreenManager_ {
   int x1;
   int y1;
   int x2;
   int y2;
   Orientation orientation;
   Vector* panels;
   Vector* fuBars;
   int panelCount;
   const FunctionBar* fuBar;
   const Header* header;
   time_t lastScan;
   bool owner;
   bool allowFocusChange;
} ScreenManager;


ScreenManager* ScreenManager_new(int x1, int y1, int x2, int y2, Orientation orientation, const Header* header, bool owner);

void ScreenManager_delete(ScreenManager* htop_this);

extern int ScreenManager_size(ScreenManager* htop_this);

void ScreenManager_add(ScreenManager* htop_this, Panel* item, FunctionBar* fuBar, int size);

Panel* ScreenManager_remove(ScreenManager* htop_this, int idx);

void ScreenManager_resize(ScreenManager* htop_this, int x1, int y1, int x2, int y2);

void ScreenManager_run(ScreenManager* htop_this, Panel** lastFocus, int* lastKey);

#endif
